{"version":3,"file":"ngx-doc-viewer.js","sources":["../../modules/document-viewer.component.ts","../../modules/document-viewer.module.ts","../../modules/ngx-doc-viewer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, NgZone, OnDestroy, OnChanges, SimpleChanges, Output, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { take } from 'rxjs/operators';\r\nimport { Subscription, interval, timer } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\ndeclare var mammoth;\r\n\r\nexport type viewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'ngx-doc-viewer',\r\n    templateUrl: 'document-viewer.component.html',\r\n    styles: [`:host {\r\n        display: block;\r\n    }\r\n    .container {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n    }\r\n    .overlay-popout-google {\r\n        width: 55px;\r\n        height: 55px;\r\n        right: 0px;\r\n        top: 9.5px;\r\n        position: absolute;\r\n        z-index: 1000;\r\n    }\r\n    .overlay-popout-office {\r\n        width: 115px;\r\n        height: 25px;\r\n        right: 0;\r\n        bottom: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n    }\r\n    .overlay-full {\r\n        width: 100%;\r\n        height: 100%;\r\n        right: 0;\r\n        top: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n    }\r\n    iframe {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    `]\r\n})\r\nexport class NgxDocViewerComponent implements OnChanges, OnDestroy {\r\n    public fullUrl: SafeResourceUrl = null;\r\n    public externalViewer = false;\r\n    public docHtml = '';\r\n    public configuredViewer: viewerType = 'google';\r\n    private checkIFrameSubscription: Subscription = null;\r\n\r\n    constructor(private domSanitizer: DomSanitizer, private ngZone: NgZone) { }\r\n    @Output() loaded: EventEmitter<any> = new EventEmitter();\r\n    @Input() url = '';\r\n    @Input() queryParams = '';\r\n    @Input() viewerUrl = '';\r\n    @Input() googleCheckInterval = 3000;\r\n    @Input() disableContent: 'none' | 'all' | 'popout' | 'popout-hide' = 'none';\r\n    @Input() googleCheckContentLoaded = true;\r\n    @Input() viewer: viewerType;\r\n    @ViewChildren('iframe') iframes: QueryList<ElementRef>;\r\n    ngOnDestroy(): void {\r\n        if (this.checkIFrameSubscription) {\r\n            this.checkIFrameSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n        if (changes && changes.viewer && (changes.viewer.isFirstChange || changes.viewer.currentValue !== changes.viewer.previousValue)) {\r\n            if (this.viewer !== 'google' && this.viewer !== 'office' &&\r\n                this.viewer !== 'mammoth' && this.viewer !== 'pdf' && this.viewer !== 'url') {\r\n                console.error(`Unsupported viewer: '${this.viewer}'. Supported viewers: google, office, mammoth and pdf`);\r\n            }\r\n            if (this.viewer === 'mammoth') {\r\n                if (mammoth === null) {\r\n                    console.error('please install mammoth when using local viewer');\r\n                }\r\n            }\r\n            this.configuredViewer = this.viewer;\r\n        }\r\n        if (this.disableContent !== 'none' && this.viewer !== 'google') {\r\n\r\n        }\r\n        if ((changes.url && changes.url.currentValue !== changes.url.previousValue) ||\r\n            changes.viewer && changes.viewer.currentValue !== changes.viewer.previousValue ||\r\n            changes.viewerUrl && changes.viewerUrl.currentValue !== changes.viewerUrl.previousValue) {\r\n            if (!changes.viewerUrl) {\r\n                this.viewerUrl = null;\r\n            }\r\n            switch (this.configuredViewer) {\r\n                case 'google':\r\n                    this.viewerUrl = `https://docs.google.com/gview?url=%URL%&embedded=true`;\r\n                    break;\r\n                case 'office': {\r\n                    this.viewerUrl = `https://view.officeapps.live.com/op/embed.aspx?src=%URL%`;\r\n                    break;\r\n                }\r\n                case 'pdf': {\r\n                    this.viewerUrl = null;\r\n                    break;\r\n                }\r\n            }\r\n            this.docHtml = '';\r\n            this.externalViewer = this.configuredViewer === 'google' || this.configuredViewer === 'office' || this.configuredViewer === 'url';\r\n            if (this.checkIFrameSubscription) {\r\n                this.checkIFrameSubscription.unsubscribe();\r\n            }\r\n            if (!this.url) {\r\n                this.fullUrl = null;\r\n            } else if (this.configuredViewer === 'office' || this.configuredViewer === 'google'\r\n                || this.configuredViewer === 'pdf' || this.configuredViewer === 'url') {\r\n                const u = this.url.indexOf('/') ? encodeURIComponent(this.url) : this.url;\r\n                let url = this.viewerUrl ? this.viewerUrl.replace('%URL%', u) : this.url;\r\n                if (!!this.queryParams && this.configuredViewer !== 'pdf') {\r\n                    const start = this.queryParams.startsWith('&') ? '' : '&';\r\n                    url = `${url}${start}${this.queryParams}`;\r\n                }\r\n                this.fullUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n                // see:\r\n                // https://stackoverflow.com/questions/40414039/google-docs-viewer-returning-204-responses-no-longer-working-alternatives\r\n                // hack to reload iframe if it's not loaded.\r\n                // would maybe be better to use view.officeapps.live.com but seems not to work with sas token.\r\n                if (this.configuredViewer === 'google' && this.googleCheckContentLoaded) {\r\n                    this.ngZone.runOutsideAngular(() => {\r\n                        // if it's not loaded after the googleIntervalCheck, then open load again.\r\n                        this.checkIFrameSubscription = timer(100, this.googleCheckInterval)\r\n                            .pipe(\r\n                                take(Math.round(this.googleCheckInterval === 0 ? 0 : 20000 / this.googleCheckInterval)))\r\n                            .subscribe(() => {\r\n                                const iframe = this.iframes?.first?.nativeElement;\r\n                                this.reloadIFrame(iframe);\r\n                            });\r\n                    });\r\n                }\r\n            } else if (this.configuredViewer === 'mammoth') {\r\n                if (!mammoth) {\r\n                    console.error('Please install mammoth and make sure mammoth.browser.min.js is loaded.');\r\n                }\r\n                this.docHtml = await this.getDocxToHtml(this.url);\r\n            }\r\n        }\r\n    }\r\n\r\n    iframeLoaded() {\r\n        this.loaded.emit(null);\r\n        if (this.checkIFrameSubscription) {\r\n            this.checkIFrameSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    reloadIFrame(iframe: HTMLIFrameElement) {\r\n        if (iframe) {\r\n            console.log('reloading..');\r\n            iframe.src = iframe.src;\r\n        }\r\n    }\r\n\r\n    private async getDocxToHtml(url: string) {\r\n        const arrayBuffer = await this.fileToArray(url);\r\n        const resultObject = await mammoth.convertToHtml({ arrayBuffer });\r\n        return resultObject.value;\r\n    }\r\n\r\n    private fileToArray(url: string): Promise<ArrayBuffer> {\r\n        return new Promise<ArrayBuffer>((resolve, reject) => {\r\n            try {\r\n                const request = new XMLHttpRequest();\r\n                request.open('GET', url, true);\r\n                request.responseType = 'blob';\r\n                request.onload = () => {\r\n                    const reader = new FileReader();\r\n                    reader.readAsArrayBuffer(request.response);\r\n                    reader.onloadend = (e) => {\r\n                        resolve(reader.result as ArrayBuffer);\r\n                    };\r\n                };\r\n                request.send();\r\n            } catch {\r\n                reject(`error while retrieving file ${url}.`);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgxDocViewerComponent } from './document-viewer.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NgxDocViewerComponent],\r\n    exports: [NgxDocViewerComponent]\r\n})\r\nexport class NgxDocViewerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}